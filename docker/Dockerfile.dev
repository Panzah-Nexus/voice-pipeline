# Development Dockerfile for fast iteration
FROM mlbra2006/voice-pipeline-airgapped:cascade


# Remove the baked-in source code
RUN rm -rf /app/src/

# Create startup script for development
RUN cat > /app/dev_start.sh << 'EOF'
#!/bin/bash
set -e

# Start SSH daemon
service ssh start

echo "üîß Development mode starting..."

echo "üöÄ Starting Ollama service..."
ollama serve &
OLLAMA_PID=$!

echo "‚è≥ Waiting for Ollama to be ready..."
# Wait for Ollama to be ready with more patience
for i in {1..60}; do
    if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
        echo "‚úÖ Ollama is ready!"
        break
    fi
    echo "   Waiting for Ollama... ($i/60)"
    sleep 2
done

# Verify model is available
echo "üîç Verifying model is available..."
if ollama list | grep -q "llama3.2:3b"; then
    echo "‚úÖ Model llama3.2:3b is available"
else
    echo "‚ö†Ô∏è  Model not found, pulling llama3.2:3b..."
    ollama pull llama3.2:3b
fi

# Health check - test a simple generation
echo "üß™ Testing Ollama connection..."
if curl -s -X POST http://localhost:11434/v1/chat/completions \
  -H "Content-Type: application/json" \
  -d '{"model":"llama3.2:3b","messages":[{"role":"user","content":"test"}],"max_tokens":1}' \
  | grep -q "choices"; then
    echo "‚úÖ Ollama API is working correctly!"
else
    echo "‚ùå Ollama API test failed!"
    exit 1
fi

# Check if we have git credentials
if [ -z "$GIT_TOKEN" ] || [ -z "$GIT_USER" ] || [ -z "$GIT_REPO" ]; then
    echo "‚ùå Missing git credentials. Please set:"
    echo "   GIT_USER=your_github_username"
    echo "   GIT_TOKEN=your_personal_access_token"
    echo "   GIT_REPO=your_repo_name (e.g., voice-pipeline)"
    exit 1
fi

# Construct the authenticated git URL
GIT_URL="https://${GIT_USER}:${GIT_TOKEN}@github.com/${GIT_USER}/${GIT_REPO}.git"

# Clone or update source code
if [ ! -d "/app/voice-pipeline-src" ]; then
    echo "üîÑ Cloning latest source code from cascade_branch..."
    git clone -b cascade_branch "$GIT_URL" /app/voice-pipeline-src
else
    echo "üîÑ Updating source code..."
    cd /app/voice-pipeline-src && git pull origin cascade_branch
fi

# Copy source to working directory
echo "üìÅ Copying source code..."
cp -r /app/voice-pipeline-src/src /app/

# Option for volume-mounted source (local development)
if [ -d "/workspace/src" ]; then
    echo "üìÅ Using volume-mounted source code..."
    cp -r /workspace/src /app/
fi

echo "üöÄ Starting voice pipeline..."
cd /app && python src/main.py
EOF

RUN chmod +x /app/dev_start.sh

# Expose SSH port and Ollama port
EXPOSE 22 8000 11434

# Default command for development
CMD ["/app/dev_start.sh"] 